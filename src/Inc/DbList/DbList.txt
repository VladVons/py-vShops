'''
Author:      Vladimir Vons <VladVons@gmail.com>
Created:     2022.03.24
License:     GNU, see LICENSE for more details

    Dbl1 = TDbListSafe([
        ('User', str),
        ('Age', int),
        ('Male', bool, True),
        ('Price', float)
    ])
    Data = [
        ['User5', 55, True, 5.67],
        ['User2', 22, True, 2.34],
        ['User6', 66, True, 6.78],
        ['User1', 11, False, 1.23],
        ['User3', 33, True, 3.45],
        ['User4', 44, True, 4.56],
        ['User5', 55, True, 5.55]
    ]
    Dbl1.SetData(Data)

    Dbl1.AddField([('Weight', int, 100)])

    Rec = Dbl1.RecAdd()
    Rec.SetField('User', 'User4')
    Rec.SetField('Age', 20)
    Rec.SetField('Male', False)
    Rec.Flush()

    Dbl1.Data.append(['User5', 30, False])
    Dbl1.RecAdd(['User6', 40, True])
    Dbl1.Rec.Flush()

    Dbl1.RecAdd()
    Dbl1.Rec.SetAsDict({'User': 'User7', 'Age': 45, 'Male': True})
    Dbl1.Rec.Flush()

    Dbl2 = Dbl1.Group(['User'], ['Price'])
    print(Dbl2)

    Dbl1.RecNo = 0
    print()
    print('GetSize:', Dbl1.GetSize())
    print('Data:', Dbl1.Data)
    print('Rec:', Dbl1.Rec)
    print('Rec.GetAsDict:', Dbl1.Rec.GetAsDict())
    print('Rec.GetAsTuple:', Dbl1.Rec.GetAsTuple())
    print('Rec.GetList:', Dbl1.ExportList('User', True))

    BT = Dbl1.SearchAdd('User')
    RecNo = BT.Search('User3')
    if (RecNo >= 0):
        for x in BT.Asc(RecNo):
            print(x, Dbl1.RecGo(x))

    Dbl1.Sort(['User', 'Age'], True)
    for Idx, Rec in enumerate(Dbl1):
        print(Idx, Rec.GetField('User'),  Rec[1])

    print()
    Db3 = Dbl1.Clone(aFields = ['User', 'Age'], aRecNo = (0, 3))
    Db3.Shuffle()
    for Idx, Rec in enumerate(Db3):
        print(Idx, Rec.GetField('User'),  Rec[1])

    Db3.self.RecNo = -2
    print('Db3.Rec', Db3.Rec)

    print()
    Cond = TDbCond().AddFields([
        ['lt', (Dbl1, 'Age'), 40, True],
        ['eq', (Dbl1, 'Male'), True, True]
    ])
    Dbl2 = Dbl1.Clone(aCond=Cond)
    print(Dbl2)

    Dbl1.Save('Dbl2.json')
    Dbl1.Load('Dbl2.json')
'''
